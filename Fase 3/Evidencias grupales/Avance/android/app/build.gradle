apply plugin: 'com.android.application'

android {
    namespace "com.sistema.juntadevecinos" // Cambia esto si tu paquete es diferente
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.sistema.juntadevecinos" // O tu paquete actual
        minSdkVersion 23 // Cambia de 22 a 23
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Archivos y directorios ignorados en los assets
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    // Dependencias existentes
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"

    // Firebase BoM y dependencias
    implementation platform('com.google.firebase:firebase-bom:33.6.0') // Firebase BoM
    implementation 'com.google.firebase:firebase-auth-ktx' // Firebase Authentication
    implementation 'com.google.firebase:firebase-firestore-ktx' // Firebase Firestore
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services' // Aplica el plugin de Google Services
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
